doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  meta(http-equiv='X-UA-Compatible' content='ie=edge')
  title
    | Welcome to fiware project
  script(src='http://localhost:7777/socket.io/socket.io.js')
div(id = 'table')
div(id = 'orderSelect')


script.

  //preparing websocket
  var socket = io({transports: ['websocket'], upgrade: false});
  //data from fiwareCB -> nodejs server
  var data = '#{data}'.split('&quot;').join('"');
  var parsed = JSON.parse(data)
  var table = document.getElementById('table')
  var orderSelect = document.getElementById('orderSelect')
  var orderTouched = false
  //prepare for innerHtml
  const title = '<center><table border="3"><tr><th>id</th><th>device type</th><th>agent</th><th>group</th></tr>'
  //console.log(parsed[0])
  rebuildTable(parsed[0])
  
  reloadSelect(parsed[0])
  const query = new URLSearchParams(location.search)
  const id = query.get('id')
  const type = query.get('type')


  socket.on('update',function(data){
    console.log('detail update')
    var target = data.filter( (ele) => {
      return ele.id == id && ele.type == type
    })
    rebuildTable(target[0]) 
    if(orderTouched) {
      orderTouched=false
      reloadSelect(target[0])
    }
  })

  function rebuildTable(parsedData){   

    content = title.toString()
    //for(var i = 0; i<parsedData.length; i++){



      content = content.concat('<tr>')
      content = content.concat('<td>' + parsedData.id + '</td>')
      content = content.concat('<td>' + parsedData.deviceType.value + '</td>')           
      content = content.concat('<td>' + parsedData.agent.value + '</td>')
      content = content.concat('<td>' + parsedData.group.value + '</td>')
      //content = content.concat('<td>' + parsedData[i].state.value + '</td>')


      


      //content = content.concat('<td>' + selectString + '</td>');
      content = content.concat('</tr><th colspan='+parsedData.history.value.length+'>values</th><tr>');

      parsedData.history.value.forEach(element => {content=content.concat('<td>'+element+'</td>')})
      content = content.concat('</tr><tr>')
      //content = content.concat('<td>details</td></tr><tr>')
      parsedData.history.value.forEach(element => {content=content.concat('<td>'+parsedData[element].value+'</td>')})
      //content = content.concat(`<td><a href = "/detail?id=`+parsedData[i].id+`" target = "_blank">show details</a></td></tr>`)
    //}
  content = content.concat('</table>')
  table.innerHTML = content

  }

  function attatchEventListner(parsed){
    
    //console.log(parsed)
    //for(var i = 0; i < parsed.length; i++){
      //const index = i+1
      const selectedBox = document.getElementById('select');
      //adding event handler for each selectbox
      selectedBox.addEventListener("change" ,function(){
        var orderSend = {}
        orderSend.type = "string"
        orderSend.value = selectedBox.options[selectedBox.selectedIndex].value
        var dataSend = {'id' : parsed.id,'type' : 'order' ,'order' : orderSend, 'agent' : parsed.agent, 'group' : parsed.group}
        socket.emit('change',dataSend);
        socket.on('done',function(){
          orderTouched=true;
          //window.location.reload();
        })
      });
    }
 // }

  function reloadSelect(data){
    
    //console.log(parsedData[0])
    var selectString = "<center>Submit Order :<select id = 'select'><option value ='default'>no change</option>"
    for(var j=0; j<data.work.value.length; j++){
            
            selectString = selectString.concat("<option value ='"+data.work.value[j]+"'>"+ data.work.value[j] +"</option>")
          }
          selectString = selectString.concat("</select>");
          orderSelect.innerHTML=selectString
          attatchEventListner(data)
  }





