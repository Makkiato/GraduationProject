doctype html
head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    meta(http-equiv='X-UA-Compatible' content='ie=edge')
    title
        | Welcome to fiware project

    link(rel='stylesheet' type='text/css' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.css')
    link(rel='stylesheet' type='text/css' href='https://cdn.datatables.net/1.10.22/css/dataTables.bootstrap4.min.css')
    script(type='text/javascript' language='javascript' src='https://code.jquery.com/jquery-3.5.1.js')
    script(type='text/javascript' language='javascript' src='https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js')
    script(type='text/javascript' language='javascript' src='https://cdn.datatables.net/1.10.22/js/dataTables.bootstrap4.min.js')


    script(src='http://localhost:7777/socket.io/socket.io.js')

body
    table(id="tableField" class="table table-striped table-bordered")
    div(class="center" )
        center
            button(id="filterReset" type="button" class="btn btn-primary" ) reset filter

    script.
        var socket = io({transports: ['websocket'], upgrade: false});

        var parsed = JSON.parse('#{data}'.split('&quot;').join('"'));
        var common = ['id','deviceType','state']
        var column = buildColumn(common)


        $(document).ready(function () {
            mainTable = $('#tableField').dataTable({

                data : parsed,
                columns :column.column,

                //buttons:['test1','test2']});

            });
        });

        function buildColumn(data){
            var toReturn = {
                column : []
                //title : [{title: "", targets: 0} ]
            }

            data.forEach((ele) =>{

                toReturn.column.push({data: ele, visible : true, title:ele})
                //toReturn.title.push({title: ele, targets: data.findIndex((ele2) => {return ele2 == ele} )})

            })
            console.log(toReturn)
            return toReturn
        }
        $('#filterReset').click(function(){
            console.log('reset filter')
            var table = $('#tableField').DataTable();
            table.search( '' ).columns().search( '' ).draw();
        })
        

        $('#tableField').on('click', 'td',function () {
            var table = $('#tableField').DataTable(); 
            var row = table.row(this).data();
            var column = table.cell(this).index().column;
            //console.log(`value : ${table.cell(this).data()}`)

            if(column == 0)
            {
                //console.log(`column : ${table.column(this).index()}`)
                //console.log(`row : ${JSON.stringify(row)}`)
                parent.chart.location.href=`./chart?id=${row.id}&type=${row.type}`
                parent.detail.location.href=`./main?id=${row.id}&type=${row.type}`
            } else if(column == 1){
                console.log(`column : ${column}`)
                console.log(`row : ${row}`)
                table.column(this).search(table.cell(this).data()).draw()

            }

        });

        socket.on('update', function(data){
            var table = $('#tableField').DataTable(); 
            console.log('list update')
            var current = table.data().toArray()

            table.rows().remove()
            data.forEach( (ele) => {
                table.row.add({
                    id : ele.id,
                    type : ele.type,
                    deviceType : ele.deviceType.value,
                    state : ele.state.value
                })
            })
            table.draw()


            //table.data().toArray() => js 2차원 배열 data
            //table.row.add(object).draw => 추가
            //start.rows(index).remove().draw() => index row 삭제
            //start.rows().remove().draw() => 전체 삭제

        })



